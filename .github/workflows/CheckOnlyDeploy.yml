name: Check only Deploy

on:
  pull_request:
    branches: [ master ]

jobs:
  Check-Only-Deploy:
    runs-on:  ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          npm install sfdx-cli --global
          sfdx --version
      # SFDX-Git-Delta
      - name: Install plugins
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins
      # Install utilities
      - name: Install utilities
        run: |
         pip install yq
         xq --version
      # Checkout the code in the pull request
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Authenticate to target org
      - name: "Authenticate to Org"
        run: |
          echo ${{ secrets.PACEDEV_AUTH_SECRET }} > ./PACEDEV_AUTH_SECRET.txt
          sfdx force:auth:sfdxurl:store -f ./PACEDEV_AUTH_SECRET.txt -a MyDefaultOrg
      # Check-only deploy
      - name: "Check-only delta deploy"
        run: |
          sfdx sgd:source:delta --to "HEAD" --from "origin/master" --output "."
          echo "--- package.xml generated with added and modified metadata ---"
          cat package/package.xml
          echo
          echo "--- Apex Tests to be executed ---"
          export APEX_CLASSES=$(xq . < package/package.xml | jq '.Package.types | [.] | flatten | map(select(.name=="ApexClass")) | .[] | .members | [.] | flatten | map(select(. | index("*") | not)) | unique | join(",")' -r)
          echo $APEX_CLASSES
          echo
          echo "--- Delta Check-Only Deploy ---"
          if [ -z "$APEX_CLASSES" ]; then
            sfdx force:source:deploy -x package/package.xml -w 30 -u MyDefaultOrg --checkonly 
          else 
            sfdx force:source:deploy -x package/package.xml -w 30 -u MyDefaultOrg -l RunLocalTests --checkonly
          fi
